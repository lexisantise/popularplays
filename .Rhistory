#Create bar graph of last 20 songs by popularity
ggplot2::ggplot(ranked) +
ggplot2::aes(x = track.name, fill = track.popularity, weight = track.popularity) +
ggplot2::geom_bar() +
ggplot2::scale_fill_distiller(palette = "Greens") +
ggplot2::labs(x = "Song Title", y = "Popularity", title = "Last 20 Songs Played by Popularity") +
ggplot2::coord_flip() +
ggplot2::theme_minimal() +
ggplot2::theme(legend.position = "top")
#' @param ClientID Given from Spotify
#' @param ClientSecret Given from Spotify
#'
#' @return Bar graph of popularity breakdown of last songs played
#'
#' @examples
#' PopularPlays("0e0ebb442929454a902d9a775e1c2202",
#' "326555358cff47d58f86bc126ca00283")
#'
#' @export
PopularPlays = function(clientID = "",
clientSecret = "") {
# Create objects that creates Client ID and clientSecret inputs
ID_input = Sys.setenv(SPOTIFY_CLIENT_ID = clientID)
Secret_input = Sys.setenv(SPOTIFY_CLIENT_SECRET = clientSecret)
# Create access token
access_token = spotifyr::get_spotify_access_token()
# Pull the last 20 recently played songs
lastplayed = spotifyr::get_my_recently_played()
# Select track name and track popularity column
important_columns = dplyr::select(lastplayed, track.name, track.popularity)
# Remove all duplicates
important_columns1 = unique(important_columns, incomparables = FALSE)
# Arrange the last 20 played songs by popularity
ranked = dplyr::arrange(important_columns1, desc(track.popularity))
#Create bar graph of last 20 songs by popularity
ggplot2::ggplot(ranked) +
ggplot2::aes(x = track.name, fill = track.popularity, weight = track.popularity) +
ggplot2::geom_bar() +
ggplot2::scale_fill_distiller(palette = "Greens") +
ggplot2::labs(x = "Song Title", y = "Popularity", title = "Last 20 Songs Played by Popularity") +
ggplot2::coord_flip() +
ggplot2::theme_minimal() +
ggplot2::theme(legend.position = "top")
}
remove.packages("ggplot2")
devtools::document()
`rm(list = c("PopularPlays"))`
#' @param ClientID Given from Spotify
#' @param ClientSecret Given from Spotify
#'
#' @return Bar graph of popularity breakdown of last songs played
#'
#' @examples
#' PopularPlays("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
#' "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX")
#'
#' @export
PopularPlays = function(clientID = "",
clientSecret = "") {
# Create objects that creates Client ID and clientSecret inputs
ID_input = Sys.setenv(SPOTIFY_CLIENT_ID = clientID)
Secret_input = Sys.setenv(SPOTIFY_CLIENT_SECRET = clientSecret)
# Create access token
access_token = spotifyr::get_spotify_access_token()
# Pull the last 20 recently played songs
lastplayed = spotifyr::get_my_recently_played()
# Select track name and track popularity column
important_columns = dplyr::select(lastplayed, track.name, track.popularity)
# Remove all duplicates
important_columns1 = unique(important_columns, incomparables = FALSE)
# Arrange the last 20 played songs by popularity
ranked = dplyr::arrange(important_columns1, desc(track.popularity))
#Create bar graph of last 20 songs by popularity
ggplot2::ggplot(ranked) +
ggplot2::aes(x = track.name, fill = track.popularity, weight = track.popularity) +
ggplot2::geom_bar() +
ggplot2::scale_fill_distiller(palette = "Greens") +
ggplot2::labs(x = "Song Title", y = "Popularity", title = "Last 20 Songs Played by Popularity") +
ggplot2::coord_flip() +
ggplot2::theme_minimal() +
ggplot2::theme(legend.position = "top")
}
devtools::document()
@keywords internal
#' @param ClientID Given from Spotify
#' @param ClientSecret Given from Spotify
#'
#' @return Bar graph of popularity breakdown of last songs played
#'
#' @examples
#' PopularPlays("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
#' "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX")
#'
#' @keywords internal
PopularPlays = function(clientID = "",
clientSecret = "") {
# Create objects that creates Client ID and clientSecret inputs
ID_input = Sys.setenv(SPOTIFY_CLIENT_ID = clientID)
Secret_input = Sys.setenv(SPOTIFY_CLIENT_SECRET = clientSecret)
# Create access token
access_token = spotifyr::get_spotify_access_token()
# Pull the last 20 recently played songs
lastplayed = spotifyr::get_my_recently_played()
# Select track name and track popularity column
important_columns = dplyr::select(lastplayed, track.name, track.popularity)
# Remove all duplicates
important_columns1 = unique(important_columns, incomparables = FALSE)
# Arrange the last 20 played songs by popularity
ranked = dplyr::arrange(important_columns1, desc(track.popularity))
#Create bar graph of last 20 songs by popularity
ggplot2::ggplot(ranked) +
ggplot2::aes(x = track.name, fill = track.popularity, weight = track.popularity) +
ggplot2::geom_bar() +
ggplot2::scale_fill_distiller(palette = "Greens") +
ggplot2::labs(x = "Song Title", y = "Popularity", title = "Last 20 Songs Played by Popularity") +
ggplot2::coord_flip() +
ggplot2::theme_minimal() +
ggplot2::theme(legend.position = "top")
}
devtools::document()
devtools::build()
>install.packages("/Users/lexisantise/popularplays_0.1.0.tar.gz", repos = NULL, type = "source")
install.packages("/Users/lexisantise/popularplays_0.1.0.tar.gz", repos = NULL, type = "source")
library(lexisantise)
library(popularplays)
PopularPlays("0e0ebb442929454a902d9a775e1c2202",
"326555358cff47d58f86bc126ca00283")
git init
git init
git in it
git init
git add
